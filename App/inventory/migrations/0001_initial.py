# Generated by Django 3.2.9 on 2021-11-19 13:20

from django.db import migrations, models
import django.db.models.deletion
import inventory.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('root', models.BooleanField(default=False)),
                ('deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=32, unique=True)),
                ('value', models.CharField(error_messages={'blank': 'This field is mandatory.', 'invalid': 'Enter the correct colour value. It must be a 3/6 hexadecimal number with # character on begining', 'null': 'This field is mandatory.'}, help_text='Hexadecimal representation of colour, for example #73a6ff.', max_length=7, validators=[inventory.validators.ColorValueValidator()])),
                ('description', models.CharField(default='Color description.', max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Credential',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('root', models.BooleanField(default=False)),
                ('deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=16, unique=True)),
                ('username', models.CharField(max_length=64)),
                ('password', models.CharField(max_length=64, null=True)),
                ('description', models.CharField(default='Credentials description.', max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('root', models.BooleanField(default=False)),
                ('deleted', models.BooleanField(default=False)),
                ('status', models.IntegerField(choices=[(0, 'Nonactive'), (1, 'Active')], default=1)),
                ('ssh_status', models.BooleanField(default=False)),
                ('https_status', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=16, unique=True)),
                ('hostname', models.CharField(error_messages={'blank': 'This field is mandatory.', 'null': 'This field is mandatory.', 'unique': 'This field must be unique.'}, help_text='Enter a valid IP address or DNS resolvable hostname.', max_length=64, unique=True)),
                ('device_type', models.IntegerField(choices=[(0, 'autodetect'), (1, 'cisco_ios'), (2, 'cisco_xr'), (3, 'cisco_xe'), (4, 'cisco_nxos')], default=0)),
                ('ico', models.IntegerField(choices=[(0, 'static/ico/model/device/switch.svg'), (1, 'static/ico/model/device/border_router.svg'), (2, 'static/ico/model/device/chassis.svg'), (3, 'static/ico/model/device/console.svg'), (4, 'static/ico/model/device/firewall.svg'), (5, 'static/ico/model/device/router.svg'), (6, 'static/ico/model/device/router_firewall.svg'), (7, 'static/ico/model/device/router_wifi_1.svg'), (8, 'static/ico/model/device/router_wifi_2.svg'), (9, 'static/ico/model/device/stack.svg'), (10, 'static/ico/model/device/stack_firewall_1.svg'), (11, 'static/ico/model/device/stack_firewall_2.svg'), (12, 'static/ico/model/device/switch.svg'), (13, 'static/ico/model/device/wifi-connection.svg'), (14, 'static/ico/model/device/wireless-router.svg')], default=0)),
                ('ssh_port', models.IntegerField(default=22)),
                ('https_port', models.IntegerField(default=443)),
                ('description', models.CharField(default='Device description.', max_length=256)),
                ('secret', models.CharField(blank=True, max_length=64, null=True)),
                ('token', models.CharField(blank=True, max_length=128, null=True)),
                ('certificate', models.BooleanField(default=False)),
                ('credential', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='inventory.credential')),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('root', models.BooleanField(default=False)),
                ('deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=16, unique=True)),
                ('description', models.CharField(default='Group description.', max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='GroupDeviceRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.device')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.group')),
            ],
            options={
                'unique_together': {('device', 'group')},
            },
        ),
        migrations.AddField(
            model_name='group',
            name='devices',
            field=models.ManyToManyField(through='inventory.GroupDeviceRelation', to='inventory.Device'),
        ),
        migrations.CreateModel(
            name='ColorGroupRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('color', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.color')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.group')),
            ],
            options={
                'unique_together': {('group', 'color')},
            },
        ),
        migrations.CreateModel(
            name='ColorDeviceRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('color', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.color')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.device')),
            ],
            options={
                'unique_together': {('device', 'color')},
            },
        ),
        migrations.CreateModel(
            name='ColorCredentialRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('color', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.color')),
                ('credential', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.credential')),
            ],
            options={
                'unique_together': {('credential', 'color')},
            },
        ),
        migrations.AddField(
            model_name='color',
            name='credentials',
            field=models.ManyToManyField(through='inventory.ColorCredentialRelation', to='inventory.Credential'),
        ),
        migrations.AddField(
            model_name='color',
            name='devices',
            field=models.ManyToManyField(through='inventory.ColorDeviceRelation', to='inventory.Device'),
        ),
        migrations.AddField(
            model_name='color',
            name='groups',
            field=models.ManyToManyField(through='inventory.ColorGroupRelation', to='inventory.Group'),
        ),
    ]
